# 3. Code Generation: Try your hand at code generation using Google Gemini API, which is proficient in understanding and generating programming
# code.

from transformers import AutoTokenizer, AutoModelForCausalLM
import torch

# Load CodeGen model and tokenizer
model_name = "Salesforce/codegen-350M-mono"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name)

# Input prompt: describe what you want the model to generate
prompt = "Write a Python program to add two numbers."

# Tokenize and prepare input
inputs = tokenizer(prompt, return_tensors="pt")
input_ids = inputs["input_ids"]

# Generate output
with torch.no_grad():
    generated_ids = model.generate(
        input_ids,
        max_length=150,
        temperature=0.7,
        do_sample=True,
        top_k=50,
        top_p=0.95,
        num_return_sequences=1
    )

# Decode and print result
generated_text = tokenizer.decode(generated_ids[0], skip_special_tokens=True)
print("Generated Code:\n")
print(generated_text)
